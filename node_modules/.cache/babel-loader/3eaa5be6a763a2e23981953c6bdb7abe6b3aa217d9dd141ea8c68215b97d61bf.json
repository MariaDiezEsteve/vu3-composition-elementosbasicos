{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createVNode as _createVNode, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_pv_else = _resolveComponent(\"pv-else\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"h1\", null, _toDisplayString($setup.name)), _createElementVNode(\"h2\", {\n    style: $setup.styleColor\n  }, \" Soy azul\"), _createElementVNode(\"h2\", null, _toDisplayString($setup.arrayColores)), _createCommentVNode(\" Esta parte nos ayuda a saber que es lo que hay dentro del array, ya que VUE nos devuelve el array literal como si fuera un texto. \"), _createElementVNode(\"h3\", {\n    style: _normalizeStyle(`color: ${$setup.arrayColores[2]}`)\n  }, \"Soy peru color\", 4 /* STYLE */), _createCommentVNode(\" Podemos incluir la interpolación de javascript en el atributo style \"), _createElementVNode(\"h5\", null, _toDisplayString($setup.activo ? \"Estoy activo\" : \"Estoy inactivo\"), 1 /* TEXT */), _createCommentVNode(\" Como mostrar diferentes estados de una misma variable -- IMPORTANTE , esto solo funcionaría si tiene un retorno inmadiato\"), $setup.decision === true ? (_openBlock(), _createElementBlock(\"p\", _hoisted_1, \" La decisión es verdadera\")) : $setup.decision === false ? (_openBlock(), _createElementBlock(\"p\", _hoisted_2, \"La descisión es falsa\")) : _createCommentVNode(\"v-if\", true), _createVNode(_component_pv_else)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","_toDisplayString","$setup","name","style","styleColor","arrayColores","_createCommentVNode","_normalizeStyle","activo","decision","_createElementBlock","_hoisted_1","_hoisted_2","_createVNode","_component_pv_else"],"sources":["/home/penascalf5/Documentos/Vue3 - Proyecto/youtube-app/app-web/src/App.vue"],"sourcesContent":["<template>\n  <h1>{{ name }}</h1>\n  <h2 :style=\"styleColor\"> Soy azul</h2>\n  <h2>{{ arrayColores }}</h2>\n  <!-- Esta parte nos ayuda a saber que es lo que hay dentro del array, ya que VUE nos devuelve el array literal como si fuera un texto. -->\n  <h3 :style=\"`color: ${arrayColores[2]}`\">Soy peru color</h3>\n  <!-- Podemos incluir la interpolación de javascript en el atributo style -->\n  <h5>{{ activo ? \"Estoy activo\" : \"Estoy inactivo\" }}</h5>\n  <!-- Como mostrar diferentes estados de una misma variable -- IMPORTANTE , esto solo funcionaría si tiene un retorno inmadiato-->\n\n  <p v-if=\"decision === true\"> La decisión es verdadera</p>\n  <p v-else-if=\"decision === false\">La descisión es falsa</p>\n  <pv-else></pv-else>\n\n</template>\n\n<script setup>\nconst name = \"Vue dinámico\"\nconst styleColor = \"color: blue\"\nconst arrayColores = [\"blue\", \"red\", \"peru\"]\nconst activo = false;\nconst decision = true;\n\n</script>\n\n<style>\n\n</style>\n"],"mappings":";;;;;;;;;6DACEA,mBAAA,CAAmB,YAAAC,gBAAA,CAAZC,MAAA,CAAAC,IAAI,IACXH,mBAAA,CAAsC;IAAjCI,KAAK,EAAEF,MAAA,CAAAG;EAAU,GAAE,WAAS,GACjCL,mBAAA,CAA2B,YAAAC,gBAAA,CAApBC,MAAA,CAAAI,YAAY,IACnBC,mBAAA,uIAA0I,EAC1IP,mBAAA,CAA4D;IAAvDI,KAAK,EAAAI,eAAA,WAAYN,MAAA,CAAAI,YAAY;KAAO,gBAAc,kBACvDC,mBAAA,yEAA4E,EAC5EP,mBAAA,CAAyD,YAAAC,gBAAA,CAAlDC,MAAA,CAAAO,MAAM,sDACbF,mBAAA,8HAAiI,EAExHL,MAAA,CAAAQ,QAAQ,a,cAAjBC,mBAAA,CAAyD,KAAAC,UAAA,EAA7B,2BAAyB,KACvCV,MAAA,CAAAQ,QAAQ,c,cAAtBC,mBAAA,CAA2D,KAAAE,UAAA,EAAzB,uBAAqB,K,mCACvDC,YAAA,CAAmBC,kBAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}