{"ast":null,"code":"export default {\n  __name: 'App',\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const name = \"Vue dinámico\";\n    const styleColor = \"color: blue\";\n    const arrayColores = [\"blue\", \"red\", \"peru\"];\n    const activo = false;\n    const decision = true;\n    const __returned__ = {\n      name,\n      styleColor,\n      arrayColores,\n      activo,\n      decision\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["name","styleColor","arrayColores","activo","decision"],"sources":["/home/penascalf5/Documentos/Vue3 - Proyecto/youtube-app/app-web/src/App.vue"],"sourcesContent":["<template>\n  <h1>{{ name }}</h1>\n  <h2 :style=\"styleColor\"> Soy azul</h2>\n  <h2>{{ arrayColores }}</h2>\n  <!-- Esta parte nos ayuda a saber que es lo que hay dentro del array, ya que VUE nos devuelve el array literal como si fuera un texto. -->\n  <h3 :style=\"`color: ${arrayColores[2]}`\">Soy peru color</h3>\n  <!-- Podemos incluir la interpolación de javascript en el atributo style -->\n  <h5>{{ activo ? \"Estoy activo\" : \"Estoy inactivo\" }}</h5>\n  <!-- Como mostrar diferentes estados de una misma variable -- IMPORTANTE , esto solo funcionaría si tiene un retorno inmadiato-->\n\n  <p v-if=\"decision === true\"> La decisión es verdadera</p>\n  <p>LA desición </p>\n\n</template>\n\n<script setup>\nconst name = \"Vue dinámico\"\nconst styleColor = \"color: blue\"\nconst arrayColores = [\"blue\", \"red\", \"peru\"]\nconst activo = false;\nconst decision = true;\n\n</script>\n\n<style>\n\n</style>\n"],"mappings":";;;;;;IAgBA,MAAMA,IAAI,GAAG,cAAc;IAC3B,MAAMC,UAAU,GAAG,aAAa;IAChC,MAAMC,YAAY,GAAG,CAAC,MAAM,EAAE,KAAK,EAAE,MAAM,CAAC;IAC5C,MAAMC,MAAM,GAAG,KAAK;IACpB,MAAMC,QAAQ,GAAG,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}