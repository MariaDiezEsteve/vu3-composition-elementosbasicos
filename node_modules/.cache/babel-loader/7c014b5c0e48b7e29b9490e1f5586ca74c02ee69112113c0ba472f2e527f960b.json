{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeStyle as _normalizeStyle, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  key: 1\n};\nconst _hoisted_3 = {\n  key: 2\n};\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"h1\", null, _toDisplayString(_ctx.name), 1 /* TEXT */), _createElementVNode(\"h2\", {\n    style: _normalizeStyle(_ctx.styleColor)\n  }, \" Soy azul\", 4 /* STYLE */), _createElementVNode(\"h2\", null, _toDisplayString(_ctx.arrayColores), 1 /* TEXT */), _createCommentVNode(\" Esta parte nos ayuda a saber que es lo que hay dentro del array, ya que VUE nos devuelve el array literal como si fuera un texto. \"), _createElementVNode(\"h3\", {\n    style: _normalizeStyle(`color: ${_ctx.arrayColores[2]}`)\n  }, \"Soy peru color\", 4 /* STYLE */), _createCommentVNode(\" Podemos incluir la interpolación de javascript en el atributo style \"), _createElementVNode(\"h5\", null, _toDisplayString(_ctx.activo ? \"Estoy activo\" : \"Estoy inactivo\"), 1 /* TEXT */), _createCommentVNode(\" Como mostrar diferentes estados de una misma variable -- IMPORTANTE , esto solo funcionaría si tiene un retorno inmadiato\"), _createCommentVNode(\" V-IF  se renderizará uno de los tres componentes dependiendo del estado de la variable. \"), _ctx.decision === true ? (_openBlock(), _createElementBlock(\"p\", _hoisted_1, \" La decisión es verdadera\")) : _ctx.decision === false ? (_openBlock(), _createElementBlock(\"p\", _hoisted_2, \"La descisión es falsa\")) : (_openBlock(), _createElementBlock(\"p\", _hoisted_3, \"La decisión es indecisa\"))], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","_toDisplayString","_ctx","name","style","_normalizeStyle","styleColor","arrayColores","_createCommentVNode","activo","decision","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3"],"sources":["/home/penascalf5/Documentos/Vue3 - Proyecto/youtube-app/app-web/src/App.vue"],"sourcesContent":["<template>\n  <h1>{{ name }}</h1>\n  <h2 :style=\"styleColor\"> Soy azul</h2>\n  <h2>{{ arrayColores }}</h2>\n  <!-- Esta parte nos ayuda a saber que es lo que hay dentro del array, ya que VUE nos devuelve el array literal como si fuera un texto. -->\n  <h3 :style=\"`color: ${arrayColores[2]}`\">Soy peru color</h3>\n  <!-- Podemos incluir la interpolación de javascript en el atributo style -->\n  <h5>{{ activo ? \"Estoy activo\" : \"Estoy inactivo\" }}</h5>\n  <!-- Como mostrar diferentes estados de una misma variable -- IMPORTANTE , esto solo funcionaría si tiene un retorno inmadiato-->\n  <!-- V-IF  se renderizará uno de los tres componentes dependiendo del estado de la variable. -->\n  <p v-if=\"decision === true\"> La decisión es verdadera</p>\n  <p v-else-if=\"decision === false\">La descisión es falsa</p>\n  <p v-else>La decisión es indecisa</p>\n\n</template>\n\n<!-- <script setup>\nconst name = \"Vue dinámico\"\nconst styleColor = \"color: blue\"\nconst arrayColores = [\"blue\", \"red\", \"peru\"]\nconst activo = false;\nconst decision = null;\n\n</script> -->\n\n<script>\nexport default {\n  setup(){\n    const name = \"Vue dinámico\"\n    const styleColor = \"color: blue\"\n    const arrayColores = [\"blue\", \"red\", \"peru\"]\n    const activo = false;\n    const decision = null;\n    \n    return {\n      name,\n    styleColor\n    arrayColores = [\"blue\", \"red\", \"peru\"]\n    activo = false;\n    decision\n    }\n  }\n}\n\n\n</script>\n\n<style>\n\n</style>\n"],"mappings":";;;;;;;;;;;6DACEA,mBAAA,CAAmB,YAAAC,gBAAA,CAAZC,IAAA,CAAAC,IAAI,kBACXH,mBAAA,CAAsC;IAAjCI,KAAK,EAAAC,eAAA,CAAEH,IAAA,CAAAI,UAAU;KAAE,WAAS,kBACjCN,mBAAA,CAA2B,YAAAC,gBAAA,CAApBC,IAAA,CAAAK,YAAY,kBACnBC,mBAAA,uIAA0I,EAC1IR,mBAAA,CAA4D;IAAvDI,KAAK,EAAAC,eAAA,WAAYH,IAAA,CAAAK,YAAY;KAAO,gBAAc,kBACvDC,mBAAA,yEAA4E,EAC5ER,mBAAA,CAAyD,YAAAC,gBAAA,CAAlDC,IAAA,CAAAO,MAAM,sDACbD,mBAAA,8HAAiI,EACjIA,mBAAA,6FAAgG,EACvFN,IAAA,CAAAQ,QAAQ,a,cAAjBC,mBAAA,CAAyD,KAAAC,UAAA,EAA7B,2BAAyB,KACvCV,IAAA,CAAAQ,QAAQ,c,cAAtBC,mBAAA,CAA2D,KAAAE,UAAA,EAAzB,uBAAqB,M,cACvDF,mBAAA,CAAqC,KAAAG,UAAA,EAA3B,yBAAuB,G"},"metadata":{},"sourceType":"module","externalDependencies":[]}